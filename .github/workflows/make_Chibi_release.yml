# Creates a release using compose.py from https://github.com/CleverRaven/Cataclysm-DDA
#
# This action is triggerd by pushing any tag starting with Chibi-v (e.g. Chibi-v1.0.1 or Chibi-v3.D)
#
# The release archive will be named using the version number from the tag (e.g. Chibi_Ultica-1.0)

on:
  push:
    tags:
    - 'Chibi-v*'

name: Make Release

jobs:
  build:
    name: Make Release
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - name: Install Dependencies
        run: |
          apk add --no-cache musl-dev gcc vips-dev python3-dev zip
          pip3 install pyvips

      - name: Checkout Code
        uses: actions/checkout@master

      - name: Build
        id: build
        run: |
          mkdir build && cd build
          wget -q https://raw.githubusercontent.com/CleverRaven/Cataclysm-DDA/master/tools/gfx_tools/compose.py \
          || echo "Error: Failed to get compose.py"

          cd ..
          python3 build/compose.py --use-all gfx/Chibi_Ultica
          cd build

          release_name=Chibi_Ultica-$(basename $GITHUB_REF | cut -c 2-)
          tileset_dir=../gfx/Chibi_Ultica

          mkdir $release_name
          mv $tileset_dir/*.png            $release_name
          mv $tileset_dir/tile_config.json $release_name
          mv $tileset_dir/tileset.txt      $release_name

          zip -r $release_name.zip $release_name

          echo ::set-output name=release_name::$release_name

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Chibi Ultica ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/${{ steps.build.outputs.release_name }}.zip
          asset_name: ${{ steps.build.outputs.release_name }}.zip
          asset_content_type: application/zip
