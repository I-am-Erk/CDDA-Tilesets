# Creates a release using compose.py from https://github.com/CleverRaven/Cataclysm-DDA
#
# This action is runs at 12:00 UTC Sunday

name: Make Release
concurrency: release
on:
  schedule:
    - cron: '0 12 * * sun'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      timestamp: ${{ steps.get-timestamp.outputs.time }}
      release_already_exists: ${{ steps.tag_check.outputs.exists }}
    steps:
      - name: Get build timestamp
        id: get-timestamp
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYY-MM-DD'
      - name: Generate environmental variables
        id: generate_env_vars
        run: |
          echo "::set-output name=tag_name::${{ steps.get-timestamp.outputs.time }}"
          echo "::set-output name=release_name::Tilesets Release ${{ steps.get-timestamp.outputs.time }}"
      - name: Check if there is existing git tag
        id: tag_check
        uses: mukunku/tag-exists-action@v1.0.0
        with:
          tag: ${{ steps.generate_env_vars.outputs.tag_name }}  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - name: Push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        if: ${{ steps.tag_check.outputs.exists == 'false' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.generate_env_vars.outputs.tag_name }}
          tag_prefix: ""
      - name: Get Previous tag
        id: previous_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: ${{ steps.generate_env_vars.outputs.tag_name }}
      - name: Create release
        id: create_release
        uses: actions/create-release@main
        if: ${{ steps.tag_check.outputs.exists == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_env_vars.outputs.tag_name }}
          release_name: ${{ steps.generate_env_vars.outputs.release_name }}
          body: |
            Full Changelog [${{ steps.previous_tag.outputs.tag }}...${{ steps.generate_env_vars.outputs.tag_name }}](https://github.com/${{ github.repository }}/compare/${{ steps.previous_tag.outputs.tag }}...${{ steps.generate_env_vars.outputs.tag_name }})
          draft: false
          prerelease: false

  builds:
    needs: release
    if: ${{ needs.release.outputs.release_already_exists == 'false' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Altica
            artifact: Altica
            tileset_dir: gfx/Altica
            compose_args: --use-all --obsolete-fillers
          - name: BrownLikeBears
            artifact: BrownLikeBears
            tileset_dir: gfx/BrownLikeBears
            compose_args: --use-all --obsolete-fillers
          - name: Chibi_Ultica
            artifact: Chibi_Ultica
            tileset_dir: gfx/Chibi_Ultica
            compose_args: --use-all
          - name: HollowMoon
            artifact: HollowMoon
            tileset_dir: gfx/HollowMoon
            compose_args: --use-all --obsolete-fillers
          - name: Larwick_Overmap
            artifact: Larwick_Overmap
            tileset_dir: gfx/Larwick_Overmap
            compose_args: --use-all
          - name: MShockXotto+
            artifact: MShockXotto+
            tileset_dir: gfx/MShockXotto+
            compose_args: --use-all
          - name: NeoDays
            artifact: NeoDaysTileset
            tileset_dir: gfx/NeoDays
            compose_args: --use-all
          - name: Retrodays
            artifact: RetroDaysTileset
            tileset_dir: gfx/Retrodays
            compose_args: --use-all
          - name: SurveyorsMap
            artifact: SurveyorsMap
            tileset_dir: gfx/SurveyorsMap
            compose_args: --use-all
          - name: UltimateCataclysm
            artifact: UltimateCataclysm
            tileset_dir: gfx/UltimateCataclysm
            compose_args: --use-all --obsolete-fillers
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install musl-dev gcc libvips-dev python3-dev python3-pip python3-wheel
          pip3 install pyvips

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build
        id: build
        run: |
          mkdir build
          wget -q -P build https://raw.githubusercontent.com/CleverRaven/Cataclysm-DDA/master/tools/gfx_tools/compose.py \
          || echo "Error: Failed to get compose.py"

          python3 build/compose.py ${{matrix.compose_args}} "${{matrix.tileset_dir}}" build
          [ -f "${{matrix.tileset_dir}}/fallback.png" ] && mv "${{matrix.tileset_dir}}/fallback.png" build
          [ -f "${{matrix.tileset_dir}}/leyering.json" ] && mv "${{matrix.tileset_dir}}/layering.json" build

          release_name=${{matrix.artifact}}

          tileset_dir=build

          mkdir $release_name
          mv build/*.png                         $release_name
          mv build/tile_config.json              $release_name
          mv ${{matrix.tileset_dir}}/tileset.txt $release_name
          [ -f "${{matrix.tileset_dir}}/layering.json" ] && mv "${{matrix.tileset_dir}}/layering.json" $release_name

          zip -r $release_name.zip $release_name

          echo ::set-output name=release_name::$release_name

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ steps.build.outputs.release_name }}.zip
          asset_name: ${{ steps.build.outputs.release_name }}.zip
          asset_content_type: application/zip
